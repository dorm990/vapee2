const { Pool } = require('pg');
const fs = require('fs');
const path = require('path');
require('dotenv').config();

async function initDatabase() {
    const pool = new Pool({
        host: process.env.DB_HOST,
        port: process.env.DB_PORT,
        user: process.env.DB_USER,
        password: process.env.DB_PASSWORD,
        database: 'postgres' // –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ –ë–î –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
    });

    try {
        console.log('üîÑ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...');
        
        // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
        const checkDb = await pool.query(
            "SELECT 1 FROM pg_database WHERE datname = $1",
            [process.env.DB_NAME]
        );

        if (checkDb.rows.length === 0) {
            console.log('üì¶ –°–æ–∑–¥–∞–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...');
            await pool.query(`CREATE DATABASE ${process.env.DB_NAME}`);
            console.log('‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö —Å–æ–∑–¥–∞–Ω–∞');
        } else {
            console.log('‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç');
        }

        await pool.end();

        // –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ —Å–æ–∑–¥–∞–Ω–Ω–æ–π –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
        const appPool = new Pool({
            host: process.env.DB_HOST,
            port: process.env.DB_PORT,
            database: process.env.DB_NAME,
            user: process.env.DB_USER,
            password: process.env.DB_PASSWORD,
        });

        console.log('üîÑ –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ SQL —Å–∫—Ä–∏–ø—Ç–∞...');
        
        // –ß—Ç–µ–Ω–∏–µ –∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ SQL —Å–∫—Ä–∏–ø—Ç–∞
        const sqlScript = fs.readFileSync(
            path.join(__dirname, '..', 'database', 'init.sql'),
            'utf8'
        );

        // –£–¥–∞–ª—è–µ–º –∫–æ–º–∞–Ω–¥—É —Å–æ–∑–¥–∞–Ω–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –∏–∑ —Å–∫—Ä–∏–ø—Ç–∞
        const cleanedScript = sqlScript
            .replace(/CREATE DATABASE.*?;/gi, '')
            .replace(/\\c.*?;/gi, '');

        await appPool.query(cleanedScript);
        
        console.log('‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞ —É—Å–ø–µ—à–Ω–æ!');
        
        // –í—ã–≤–æ–¥ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
        const stats = await appPool.query(`
            SELECT 
                (SELECT COUNT(*) FROM stores) as stores_count,
                (SELECT COUNT(*) FROM rewards) as rewards_count
        `);
        
        console.log('\nüìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:');
        console.log(`   –ú–∞–≥–∞–∑–∏–Ω–æ–≤: ${stats.rows[0].stores_count}`);
        console.log(`   –ù–∞–≥—Ä–∞–¥: ${stats.rows[0].rewards_count}`);
        
        await appPool.end();
        
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö:', error.message);
        process.exit(1);
    }
}

initDatabase();
